(window.webpackJsonp=window.webpackJsonp||[]).push([[325],{789:function(t,s,e){"use strict";e.r(s);var r=e(18),a=Object(r.a)({},(function(){var t=this.$createElement,s=this._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("ul",[s("li",[s("a",{attrs:{href:"https://docs.oracle.com/cd/E24847_01/html/819-7061/rbac-1.html",target:"_blank",rel:"noopener noreferrer"}},[this._v("基于角色的访问控制（概述）"),s("OutboundLink")],1)])]),this._v(" "),s("h2",{attrs:{id:"rbac-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rbac-概述"}},[this._v("#")]),this._v(" RBAC 概述")]),this._v(" "),s("p",[this._v("RBAC 是基于角色的访问控制（Role-Based Access Control）作为传统访问控制（自主访问，强制访问）的有前景的代替受到广泛的关注。在 RBAC 中，权限与角色相关联，用户通过成为适当角色的成员而得到这些角色的权限。这就极大地简化了权限的管理。在一个组织中，角色是为了完成各种工作而创造，用户则依据它的责任和资格来被指派相应的角色，用户可以很容易地从一个角色被指派到另一个角色。角色可依新的需求和系统的合并而赋予新的权限，而权限也可根据需要而从某角色中回收。角色与角色的关系可以建立起来以囊括更广泛的客观情况。角色与角色的指派包含用户与角色的指派、角色与权限的指派的一些特点。")])])}),[],!1,null,null,null);s.default=a.exports}}]);