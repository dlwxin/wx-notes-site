(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{611:function(e,s,t){"use strict";t.r(s);var a=t(18),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"please-clean-your-repository-working-tree-before-checkout"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#please-clean-your-repository-working-tree-before-checkout"}},[e._v("#")]),e._v(" please clean your repository working tree before checkout")]),e._v(" "),t("p",[e._v("有的时候，在本地改了一些代码，想要把这些代码 push 到远程。 但在你想在 "),t("code",[e._v("git commit")]),e._v(" 之前先执行 "),t("code",[e._v("git pull")]),e._v(" 来获取最新的代码。这时 git 可能会报一个错误 "),t("strong",[e._v("please clean your repository working tree before checkout")])]),e._v(" "),t("blockquote",[t("p",[e._v("如果没有修改同一个文件，直接 "),t("code",[e._v("git pull")]),e._v(" 是没有问题的。\n如果可能发生冲突.直接 "),t("code",[e._v("git pull")]),e._v(" 会拒绝覆盖当前的修改.")])]),e._v(" "),t("p",[e._v("打开 log 看到如下错误")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("error: Your local changes to the following files would be overwritten by merge:\n\ttest.md\nPlease commit your changes or stash them before you merge.\nAborting\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("根据提示可知 "),t("code",[e._v("test.md")]),e._v(" 会被 "),t("code",[e._v("merge")]),e._v(" 操作覆盖，因为 "),t("code",[e._v("test.md")]),e._v(" 已经被其他人改过并提交到远程了。现在执行 "),t("code",[e._v("git pull")]),e._v("，远程的 "),t("code",[e._v("test.md")]),e._v(" 就会把你本地改的 "),t("code",[e._v("test.md")]),e._v(" 覆盖。")]),e._v(" "),t("blockquote",[t("p",[e._v("NB: "),t("code",[e._v("git pull")]),e._v(" = "),t("code",[e._v("git fetch")]),e._v(" + "),t("code",[e._v("git merge")])])]),e._v(" "),t("p",[e._v("所以 Git 提示，在 "),t("code",[e._v("merge")]),e._v(" 之前把本地修改过的文件用 "),t("code",[e._v("git commit")]),e._v(" 提交到本地仓库或者用 "),t("code",[e._v("git stash")]),e._v(" 暂时存起来。")]),e._v(" "),t("p",[t("strong",[e._v("1. git commit")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('git commit -m "update test.md by local"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("现在就可以执行 "),t("code",[e._v("git pull")]),e._v(" 了")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git pull\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("现在已经获取到最新代码了，执行 "),t("code",[e._v("git log")]),e._v(" 命令可以看到在你刚才的 commit 后多了一条 commit 记录。")]),e._v(" "),t("p",[e._v("E.g :")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# message:")]),e._v("\nMerge branch "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'master'")]),e._v(" of https://github.com/user/command-test\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[t("strong",[e._v("2. git stash")])]),e._v(" "),t("ul",[t("li",[e._v("执行 "),t("code",[e._v('git stash save "tmp"')]),e._v(" 将修改过的文件暂时存起来。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('git stash save "tmp"\n# or\ngit stash\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("ul",[t("li",[e._v("执行 "),t("code",[e._v("git pull")]),e._v(" 获取最新代码")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git pull\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("这时应该可以看到最新的代码了， 接下来就要执行 "),t("code",[e._v("git stash pop")]),e._v(" 把本地修改的代码移出来")])]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" stash pop\nAuto-merging test.md\nOn branch master\nYour branch is up to "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("date")]),e._v(" with "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'origin/master'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v("\n\nChanges not staged "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" commit:\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"git add <file>..."')]),e._v(" to update what will be committed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"git restore <file>..."')]),e._v(" to discard changes "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" working directory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        modified:   test.md\n\nno changes added to commit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"git add"')]),e._v(" and/or "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"git commit -a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nDropped refs/stash@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("03bced0ac598ea243a003f19061f2e910240c185"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br")])]),t("p",[e._v("可以发现本地修改的代码已经被自动 merge 到当前的代码（最新的代码）中了。 接下来的操作就正常的流程一下了")]),e._v(" "),t("p",[e._v("E.g")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('git add test.md\n\ngit commit -m "update test.md"\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("blockquote",[t("p",[e._v("值得注意的是：用 "),t("code",[e._v("git stash")]),e._v(" 并没有像 "),t("code",[e._v("git commit")]),e._v(" 那样多出来一个用来 merge 的 commit 记录")])]),e._v(" "),t("p",[t("strong",[e._v("3. git branch")])]),e._v(" "),t("p",[e._v("可以新建一个分支,把当前代码提交过去,之后再 merge 回来。")]),e._v(" "),t("h2",{attrs:{id:"this-repository-currently-has-approximately-1500-loose-objects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#this-repository-currently-has-approximately-1500-loose-objects"}},[e._v("#")]),e._v(" This repository currently has approximately 1500 loose objects.")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://stackoverflow.com/questions/21457407/git-gui-perpetually-getting-this-repository-currently-has-approximately-320-lo",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git Gui: Perpetually getting “This repository currently has approximately 320 loose objects.”"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://stackoverflow.com/questions/1106529/how-to-skip-loose-object-popup-when-running-git-gui",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to skip “Loose Object” popup when running 'git gui'"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://stackoverflow.com/questions/5709687/what-are-the-loose-objects-that-the-git-gui-refers-to",target:"_blank",rel:"noopener noreferrer"}},[e._v("What are the “loose objects” that the Git GUI refers to?"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("Every time I start Git Gui on a particular project I get this message:")]),e._v(" "),t("blockquote",[t("p",[e._v("This repository currently has approximately 256 loose objects")])]),e._v(" "),t("p",[e._v("I clicked Yes.")]),e._v(" "),t("p",[e._v("when I open Git Gui again, I get the "),t("strong",[e._v("exact same message")]),e._v(", again about 320 loose objects! It's as if clicking Yes had no effect at all.")]),e._v(" "),t("p",[e._v("Soultion:")]),e._v(" "),t("p",[e._v("This should be fixable by running this command from the command line:")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" path/to/your/git/repo\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" gc --aggressive\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("From the output of "),t("code",[e._v("git help gc")]),e._v(":")]),e._v(" "),t("blockquote",[t("p",[e._v("Runs a number of housekeeping tasks within the current repository, such as compressing file revisions (to reduce disk space and increase performance) and removing unreachable objects which may have been created from prior invocations of git add.")]),e._v(" "),t("p",[e._v("Users are encouraged to run this task on a regular basis within each repository to maintain good disk space utilization and good operating performance.")]),e._v(" "),t("p",[e._v("--aggressive")]),e._v(" "),t("blockquote",[t("p",[e._v("Usually git gc runs very quickly while providing good disk space utilization and performance. This option will cause git gc to more aggressively optimize the repository at the expense of taking much more time. The effects of this optimization are persistent, so this option only needs to be used occasionally; every few hundred changesets or so.")])])]),e._v(" "),t("p",[e._v("if you use Git v1.7.9 or newer, you can disable the warning dialog with the following command:")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" config --global gui.gcwarning "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"how-to-prevent-git-stash-dropping-changes-to-files-with-the-assume-unchanged-bit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-prevent-git-stash-dropping-changes-to-files-with-the-assume-unchanged-bit"}},[e._v("#")]),e._v(" How to prevent git stash dropping changes to files with the “assume unchanged” bit?")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://stackoverflow.com/questions/5962456/how-to-prevent-git-stash-dropping-changes-to-files-with-the-assume-unchanged-b",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to prevent git stash dropping changes to files with the “assume unchanged” bit?"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://git.661346.n2.nabble.com/git-stash-deletes-drops-changes-of-quot-assume-unchanged-quot-files-td5140213.html",target:"_blank",rel:"noopener noreferrer"}},[e._v('git stash deletes/drops changes of "assume-unchanged" files'),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"github-error-unable-to-read-askpass-response-from-gnome-ssh-askpass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github-error-unable-to-read-askpass-response-from-gnome-ssh-askpass"}},[e._v("#")]),e._v(" github error: unable to read askpass response from gnome-ssh-askpass")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Root Cause")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$cat")]),e._v(" /etc/profile.d/gnome-ssh-askpass.sh\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SSH_ASKPASS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/usr/libexec/openssh/gnome-ssh-askpass\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Fixed")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$unset")]),e._v(" SSH_ASKPASS\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# then")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$git")]),e._v(" push origin master\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);