(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{664:function(e,v,_){"use strict";_.r(v);var t=_(18),r=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"kubernetes-configmap"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-configmap"}},[e._v("#")]),e._v(" Kubernetes ConfigMap")]),e._v(" "),_("h3",{attrs:{id:"overview"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),_("p",[e._v("ConfigMap 是一种存储非敏感数据的名称空间级别对象的资源：以键值对形式存储配置数据，将您的环境配置信息和容器镜像解耦，便于应用配置的修改。")]),e._v(" "),_("p",[e._v("ConfigMap 主要服务于 Pod")]),e._v(" "),_("ul",[_("li",[e._v("为容器提供环境变量")]),e._v(" "),_("li",[e._v("为容器提供命令行参数")]),e._v(" "),_("li",[e._v("为容器内的应用程序提供配置文件")])]),e._v(" "),_("p",[e._v("ConfigMap 设计要素")]),e._v(" "),_("ul",[_("li",[e._v("解耦应用程序(镜像)和配置参数：同镜像实现不同配置、一次创建多次使用、触发变更")]),e._v(" "),_("li",[e._v("不用于存储大块数据（<=1MB）")])]),e._v(" "),_("p",[e._v("ConfigMap（Secret）的工作流程")]),e._v(" "),_("ul",[_("li",[e._v("Client 在用户空间提交 cm 到 api-server")]),e._v(" "),_("li",[e._v("api-server 持久键值对到 etcd")]),e._v(" "),_("li",[e._v("用户使用调用 cm 发布资源(pod、deploy、ds 等),cm 以环境变量方式注入到容器内部，或以 volume 的方式挂载到容器内部挂载点。")]),e._v(" "),_("li",[e._v("节点 kubelet 会在每次周期性同步时检查所挂载的 ConfigMap 的变更，如果 volume 的方式挂载到容器内部挂载点，可热变更资源 deploy、ds 等 将触发自动更新 pod。(单 pod 资源不支持热变更)")])]),e._v(" "),_("p",[e._v("ConfigMap 使用总结")]),e._v(" "),_("ul",[_("li",[e._v("ConfigMap 用于存储非敏感应用配置")]),e._v(" "),_("li",[e._v("每个 ConfigMap 大小限制为 1MB")]),e._v(" "),_("li",[e._v("ConfigMap 必须先于 Pod 创建，否则 Pod 无法启动")]),e._v(" "),_("li",[e._v("Pod 只能使用同 Namespace 下的 ConfigMap")]),e._v(" "),_("li",[e._v("使用 ConfigMap 挂载配置文件，会自动更新")]),e._v(" "),_("li",[e._v("使用 ConfigMap 配置环境变量时，不会自动更新")])]),e._v(" "),_("h3",{attrs:{id:"env-secret-configmap-比较"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#env-secret-configmap-比较"}},[e._v("#")]),e._v(" Env Secret Configmap 比较")]),e._v(" "),_("table",[_("thead",[_("tr",[_("th",[e._v("功能")]),e._v(" "),_("th",[e._v("Env")]),e._v(" "),_("th",[e._v("Configmap")]),e._v(" "),_("th",[e._v("Secret")])])]),e._v(" "),_("tbody",[_("tr",[_("td",[e._v("注入环境变量")]),e._v(" "),_("td",[e._v("Y")]),e._v(" "),_("td",[e._v("Y")]),e._v(" "),_("td",[e._v("Y")])]),e._v(" "),_("tr",[_("td",[e._v("变更触发控制器环境变量自动更新")]),e._v(" "),_("td",[e._v("Y")]),e._v(" "),_("td"),e._v(" "),_("td")]),e._v(" "),_("tr",[_("td",[e._v("注入配置文件")]),e._v(" "),_("td"),e._v(" "),_("td",[e._v("Y")]),e._v(" "),_("td",[e._v("Y")])]),e._v(" "),_("tr",[_("td",[e._v("变更触发触发挂载配置文件自动更新")]),e._v(" "),_("td"),e._v(" "),_("td",[e._v("Y")]),e._v(" "),_("td",[e._v("Y")])]),e._v(" "),_("tr",[_("td",[e._v("一次创建多次使用")]),e._v(" "),_("td"),e._v(" "),_("td",[e._v("Y")]),e._v(" "),_("td",[e._v("Y")])])])]),e._v(" "),_("h3",{attrs:{id:"使用-manifest-创建-configmap"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用-manifest-创建-configmap"}},[e._v("#")]),e._v(" 使用 manifest 创建 ConfigMap")]),e._v(" "),_("p",[e._v("configmap 核心字段说明")]),e._v(" "),_("p",[_("strong",[e._v("binaryData 字段")])]),e._v(" "),_("p",[e._v("类型："),_("code",[e._v("<map[string] string>")])]),e._v(" "),_("p",[e._v("使用 key-value 的键值对存放配置数据。其中 key 必须由字母、数字、字符、"),_("code",[e._v("-")]),e._v("、"),_("code",[e._v("_")]),e._v("或"),_("code",[e._v(".")]),e._v("组成。value 为二进制字符，可以使用 非 utf-8 编码。key 不能与 data 字段中的 key 重叠。")]),e._v(" "),_("p",[_("strong",[e._v("data 字段")])]),e._v(" "),_("p",[e._v("类型："),_("code",[e._v("<map[string] string>")])]),e._v(" "),_("p",[e._v("使用 key-value 的键值对存放配置数据。每个 key 必须由字母、数字、字符、"),_("code",[e._v("-")]),e._v("、"),_("code",[e._v("_")]),e._v("或"),_("code",[e._v(".")]),e._v("组成。value 为明文字符，必须为 utf-8 编码。key 不能与 binaryData 字段中的 key 重叠。")]),e._v(" "),_("p",[_("strong",[e._v("immutable 字段")])]),e._v(" "),_("p",[e._v("类型："),_("code",[e._v("<boolean>")]),e._v(" "),_("code",[e._v("v1.21 [stable]")])]),e._v(" "),_("p",[e._v("如果设置为 true,可确保存储在 ConfigMap 中的数据无法更新（只能修改对象元数据）,默认为 false。")]),e._v(" "),_("p",[e._v("作用：")]),e._v(" "),_("ul",[_("li",[e._v("保护应用，使之免受意外，避免更新所带来的负面影响。")]),e._v(" "),_("li",[e._v("关闭对已标记为不可变更的 ConfigMap 的监视操作，大幅降低对 kube-apiserver 的压力提升集群性能。 （此功能特性由 ImmutableEphemeralVolumes 特性门 feature gate 控制）")])]),e._v(" "),_("h3",{attrs:{id:"configmap-消费模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#configmap-消费模型"}},[e._v("#")]),e._v(" ConfigMap 消费模型")]),e._v(" "),_("table",[_("thead",[_("tr",[_("th",[e._v("消费方式")]),e._v(" "),_("th",[e._v("使用方法")])])]),e._v(" "),_("tbody",[_("tr",[_("td",[e._v("使用整个 Configmap 中所有键值对，作为变量")]),e._v(" "),_("td",[_("code",[e._v("[ pod , template ].spec.containers[].envFrom[].configMapRef")])])]),e._v(" "),_("tr",[_("td",[e._v("使用 Configmap 中指定部分键值对，并自定义变量名")]),e._v(" "),_("td",[_("code",[e._v("[ pod , template ].spec.containers[].env[].valueFrom.configMapKeyRef")])])]),e._v(" "),_("tr",[_("td",[e._v("把包含配置文件或文件夹的 Configmap 当成 volume 挂载到容器内部")]),e._v(" "),_("td",[_("code",[e._v("[ pod , template ].spec.volumes.configMap")])])])])]),e._v(" "),_("h2",{attrs:{id:"kubernetes-secret"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-secret"}},[e._v("#")]),e._v(" Kubernetes Secret")]),e._v(" "),_("h3",{attrs:{id:"overview-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#overview-2"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),_("p",[e._v("Secret 是一种存储感数据的名称空间级别对象的资源：以键值对形式存储密码、token、dockercfg、证书")]),e._v(" "),_("p",[e._v("Secret 主要服务于 Pod")]),e._v(" "),_("ul",[_("li",[e._v("为容器提供环境变量，用户名密码等敏感数据")]),e._v(" "),_("li",[e._v("为容器提供镜像仓库密钥(由 kubelet 使用)")]),e._v(" "),_("li",[e._v("为容器提供证书")])]),e._v(" "),_("p",[e._v("Secret 设计要素")]),e._v(" "),_("ul",[_("li",[e._v("解耦应用程序(镜像)和配置参数：同镜像实现不同配置、一次创建多次使用、触发变更")]),e._v(" "),_("li",[e._v("不用于存储大块数据（<=1MB）")]),e._v(" "),_("li",[e._v("数据采用 base-64 编码保存（非加密）")]),e._v(" "),_("li",[e._v("通常结合 RBAC rules 来加强安全性")])]),e._v(" "),_("p",[e._v("Secret 使用总结")]),e._v(" "),_("ul",[_("li",[e._v("Secret 用于存储敏感配置（区别于 ConfigMap）")]),e._v(" "),_("li",[e._v("每个 Secret 大小限制为 1MB")]),e._v(" "),_("li",[e._v("Pod 只能使用同 Namespace 下的 Secret")]),e._v(" "),_("li",[e._v("Secret 数据使用 Base64 编码，本身不提供数据加密")]),e._v(" "),_("li",[e._v("由于 Secret 会以纯文本方式存储在 etcd，需要限制 etcd 的访问权限")]),e._v(" "),_("li",[e._v("为 Secret 设置严格的 RBAC 规则，限制资源访问")])]),e._v(" "),_("h3",{attrs:{id:"使用-manifest-创建-secret"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用-manifest-创建-secret"}},[e._v("#")]),e._v(" 使用 manifest 创建 Secret")]),e._v(" "),_("p",[e._v("Secret 核心字段说明")]),e._v(" "),_("p",[_("strong",[e._v("binaryData 字段")])]),e._v(" "),_("p",[e._v("类型："),_("code",[e._v("<map[string] string>")])]),e._v(" "),_("p",[e._v("使用 key-value 的键值对存放敏感配置数据。其中 key 必须由字母、数字、字符、"),_("code",[e._v("-")]),e._v("、"),_("code",[e._v("_")]),e._v("或"),_("code",[e._v(".")]),e._v("组成。value 为 base64 编码的字符。")]),e._v(" "),_("p",[_("strong",[e._v("data 字段")])]),e._v(" "),_("p",[e._v("类型："),_("code",[e._v("<map[string] string>")])]),e._v(" "),_("p",[e._v("使用 key-value 的键值对存放敏感配置数据。每个 key 必须由字母、数字、字符、"),_("code",[e._v("-")]),e._v("、"),_("code",[e._v("_")]),e._v("或"),_("code",[e._v(".")]),e._v("组成。value 为明文字符，后续 k8s 自动转换为 base64 编码，存储在 etcd 中")]),e._v(" "),_("p",[_("strong",[e._v("immutable 字段")])]),e._v(" "),_("p",[e._v("类型："),_("code",[e._v("<boolean>")]),e._v(" "),_("code",[e._v("v1.21 [stable]")])]),e._v(" "),_("p",[e._v("如果设置为 true,可确保存储在机密中的数据无法更新（只能修改对象元数据）,默认为 false。")]),e._v(" "),_("p",[e._v("作用：")]),e._v(" "),_("ul",[_("li",[e._v("保护应用，使之免受意外，避免更新所带来的负面影响。")]),e._v(" "),_("li",[e._v("关闭对已标记为不可变更的 secret 的监视操作，大幅降低对 kube-apiserver 的压力提升集群性能。 （此功能特性由 ImmutableEphemeralVolumes 特性门 feature gate 控制）")])]),e._v(" "),_("h3",{attrs:{id:"secret-类型说明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#secret-类型说明"}},[e._v("#")]),e._v(" Secret 类型说明")]),e._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("code",[e._v("secret.type")])]),e._v(" "),_("th",[e._v("Cli command")]),e._v(" "),_("th",[e._v("Description")])])]),e._v(" "),_("tbody",[_("tr",[_("td",[e._v("Opaque")]),e._v(" "),_("td",[e._v("generic")]),e._v(" "),_("td",[e._v("自定义数据内容，base64 编码，用来存储数据、秘钥、敏感信息、证书等数据。")])]),e._v(" "),_("tr",[_("td",[e._v("kubernetes.io/dockerconfigjson")]),e._v(" "),_("td",[e._v("docker-registry")]),e._v(" "),_("td",[e._v("用来存储 Docker 镜像仓库的认证信息。")])]),e._v(" "),_("tr",[_("td",[e._v("kubernetes.io/tls")]),e._v(" "),_("td",[e._v("tls")]),e._v(" "),_("td",[e._v("SSL 加密通信时，存储证书和私钥文件信息。")])]),e._v(" "),_("tr",[_("td",[e._v("kubernetes.io/service-account-token")]),e._v(" "),_("td",[e._v("自动创建无需手动创建")]),e._v(" "),_("td",[e._v("Service Account 的认证信息，在创建 ServiceAccount 时由 Kubernetes 自动创建。")])])])]),e._v(" "),_("p",[e._v("See more "),_("a",{attrs:{href:"https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",target:"_blank",rel:"noopener noreferrer"}},[e._v("types"),_("OutboundLink")],1)]),e._v(" "),_("h3",{attrs:{id:"secret-消费模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#secret-消费模型"}},[e._v("#")]),e._v(" Secret 消费模型")]),e._v(" "),_("p",[_("strong",[e._v("以环境变量注入 pod generic")])]),e._v(" "),_("p",[e._v("第一种：")]),e._v(" "),_("p",[e._v("消费方式: 使用整个 Secret 中所有键值对，作为变量")]),e._v(" "),_("p",[e._v("使用方法: "),_("code",[e._v("[ pod | template ].spec.containers[].envFrom[].secretRef")])]),e._v(" "),_("p",[e._v("第二种：")]),e._v(" "),_("p",[e._v("消费方式: 使用 Secret 中指定部分键值对，并自定义变量名")]),e._v(" "),_("p",[e._v("使用方法: "),_("code",[e._v("[ pod | template ].spec.containers[].env[].valueFrom.secretKeyRef")])]),e._v(" "),_("p",[_("strong",[e._v("OCI registry 登录凭证 docker-registry")])]),e._v(" "),_("p",[e._v("第一种：")]),e._v(" "),_("p",[e._v("消费方式: 发布容器时，指定保存镜像仓库凭证的 secret")]),e._v(" "),_("p",[e._v("使用方法: "),_("code",[e._v("[ pod | template ].spec.imagePullSecretsf")])]),e._v(" "),_("p",[e._v("第二种：")]),e._v(" "),_("p",[e._v("消费方式: 把镜像仓库凭证的 secret 绑定服务账户")]),e._v(" "),_("p",[e._v("使用方法: "),_("code",[e._v("serviceaccount.imagePullSecrets")])]),e._v(" "),_("p",[_("strong",[e._v("generic、tls")])]),e._v(" "),_("p",[e._v("消费方式: 把配置数据或 tls 证书以卷方式供 pod 使用")]),e._v(" "),_("p",[e._v("使用方法: "),_("code",[e._v("[ pod | template ].spec.volumes[].secret")])])])}),[],!1,null,null,null);v.default=r.exports}}]);