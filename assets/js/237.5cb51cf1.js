(window.webpackJsonp=window.webpackJsonp||[]).push([[237],{702:function(s,a,e){"use strict";e.r(a);var t=e(18),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("ul",[e("li",[e("a",{attrs:{href:"https://developer.hashicorp.com/terraform/cli",target:"_blank",rel:"noopener noreferrer"}},[s._v("Terraform CLI Documentation"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://spacelift.io/blog/terraform-commands-cheat-sheet",target:"_blank",rel:"noopener noreferrer"}},[s._v("Terraform Cheat Sheet â€“ 21 Terraform CLI Commands & Examples"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://acloudguru.com/blog/engineering/the-ultimate-terraform-cheatsheet",target:"_blank",rel:"noopener noreferrer"}},[s._v("The Ultimate Terraform Commands Cheat Sheet"),e("OutboundLink")],1)])]),s._v(" "),e("h2",{attrs:{id:"shell-tab-completion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shell-tab-completion"}},[s._v("#")]),s._v(" Shell Tab-completion")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://developer.hashicorp.com/terraform/cli/commands#shell-tab-completion",target:"_blank",rel:"noopener noreferrer"}},[s._v("Shell Tab-completion"),e("OutboundLink")],1)])]),s._v(" "),e("p",[s._v("If you use either "),e("code",[s._v("bash")]),s._v(" or "),e("code",[s._v("zsh")]),s._v(" as your command shell, Terraform can provide tab-completion support for all command names and (at this time) some command arguments.")]),s._v(" "),e("h3",{attrs:{id:"installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[s._v("#")]),s._v(" Installation")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("terraform -install-autocomplete\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"uninstall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uninstall"}},[s._v("#")]),s._v(" Uninstall")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("terraform -uninstall-autocomplete\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"help"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#help"}},[s._v("#")]),s._v(" help")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("terraform -help\nUsage: terraform "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("global options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("subcommand"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nThe available commands "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" execution are listed below.\nThe primary workflow commands are given first, followed by\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("less")]),s._v(" common or "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" advanced commands.\n\nMain commands:\n  init          Prepare your working directory "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" other commands\n  validate      Check whether the configuration is valid\n  plan          Show changes required by the current configuration\n  apply         Create or update infrastructure\n  destroy       Destroy previously-created infrastructure\n\nAll other commands:\n  console       Try Terraform expressions at an interactive "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" prompt\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("fmt")]),s._v("           Reformat your configuration "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the standard style\n  force-unlock  Release a stuck lock on the current workspace\n  get           Install or upgrade remote Terraform modules\n  graph         Generate a Graphviz graph of the steps "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" an operation\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v("        Associate existing infrastructure with a Terraform resource\n  login         Obtain and save credentials "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a remote "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("logout")]),s._v("        Remove locally-stored credentials "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a remote "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("\n  output        Show output values from your root module\n  providers     Show the providers required "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" this configuration\n  refresh       Update the state to match remote systems\n  show          Show the current state or a saved plan\n  state         Advanced state management\n  taint         Mark a resource instance as not fully functional\n  "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("          Experimental support "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" module integration testing\n  untaint       Remove the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tainted'")]),s._v(" state from a resource instance\n  version       Show the current Terraform version\n  workspace     Workspace management\n\nGlobal options "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use these before the subcommand, "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" any"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n  -chdir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("DIR    Switch to a different working directory before executing the\n                given subcommand.\n  -help         Show this "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" output, or the "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a specified subcommand.\n  -version      An "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version"')]),s._v(" subcommand.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  Display help options for the init command.")]),s._v("\nterraform init -help\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"version"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[s._v("#")]),s._v(" version")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("terraform version\nTerraform v1.3.2\non linux_amd64\n+ provider registry.terraform.io/kreuzwerker/docker v2.13.0\n\nYour version of Terraform is out of date"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" The latest version\nis "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.3")]),s._v(".3. You can update by downloading from https://www.terraform.io/downloads.html\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#init"}},[s._v("#")]),s._v(" init")]),s._v(" "),e("p",[s._v("Initialize a new or existing Terraform working directory by "),e("strong",[s._v("creating initial files")]),s._v(", "),e("strong",[s._v("loading any remote state")]),s._v(", "),e("strong",[s._v("downloading modules")]),s._v(", etc.")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# terraform init command performs Backend Initialization")]),s._v("\nterraform init\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Install the latest module and provider versions allowed within configured constraints, overriding the default behavior of selecting")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exactly the version recorded in the dependency lockfile.")]),s._v("\nterraform init -upgrade\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Disable downloading modules for this configuration.")]),s._v("\nterraform init -get"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Reconfigure a backend, ignoring any saved configuration.")]),s._v("\nterraform init -reconfigure\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Disable backend or Terraform Cloud initialization for this configuration and use what was previously initialized instead.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# without accessing any configured remote backend")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aliases: -cloud=false")]),s._v("\nterraform init -backend"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\nterraform init -cloud"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n\nterraform init -backend-config"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path to tfvars file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h2",{attrs:{id:"validate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#validate"}},[s._v("#")]),s._v(" validate")]),s._v(" "),e("p",[s._v("Validate the configuration files in a directory, referring only to the configuration and not accessing any remote services such as remote state,provider APIs, etc.")]),s._v(" "),e("p",[e("strong",[s._v("Validation requires an initialized working directory with any referenced plugins and modules installed")]),s._v("."),e("br"),s._v("\nTo initialize a working directory for validation without accessing any configured remote backend, use: "),e("code",[s._v("terraform init -backend=false")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("terraform validate\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Produce output in a machine-readable JSON format")]),s._v("\nterraform validate -json\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"plan"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plan"}},[s._v("#")]),s._v(" plan")]),s._v(" "),e("p",[s._v("Generates a speculative execution plan, showing what actions Terraform would take to apply the current configuration. "),e("strong",[s._v("This command will not actually perform the planned actions.")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("terraform plan\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Creates a plan to destroy all objects, rather than the usual actions.")]),s._v("\nterraform plan -destroy\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Write a plan file to the given path. This can be used as input to the "apply" command.')]),s._v("\nterraform plan -out"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\nterraform plan -var "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo=bar'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Load variable values from the given file, in addition to the default files terraform.tfvars and *.auto.tfvars.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Use this option more than once to include more than one variables file.")]),s._v("\nterraform plan -var-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("filename\nterraform plan -var-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("filename1 -var-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("filename2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h2",{attrs:{id:"apply"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apply"}},[s._v("#")]),s._v(" apply")]),s._v(" "),e("p",[s._v("Creates or updates infrastructure according to Terraform configuration files in the current directory.")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("terraform apply\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Skip interactive approval of plan before applying.")]),s._v("\nterraform apply -auto-approve\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Provide the file generated using the terraform plan -out command. If provided, Terraform will take the actions in the plan without any confirmation prompts.")]),s._v("\nterraform apply "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("planfilename"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\nterraform apply -var"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"image_id=ami-abc123"')]),s._v("\nterraform apply -var"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'image_id_list=["ami-abc123","ami-def456"]\'')]),s._v(" -var"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"instance_type=t2.micro"')]),s._v("\nterraform apply -var"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'image_id_map={"us-east-1":"ami-abc123","us-east-2":"ami-def456"}\'')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pass in variables contained in a file.")]),s._v("\nterraform apply -var-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"varfile.tfvars"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h2",{attrs:{id:"destroy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#destroy"}},[s._v("#")]),s._v(" destroy")]),s._v(" "),e("p",[s._v("Destroys the infrastructure managed by Terraform.")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("terraform destroy\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# terraform destroy, this command is a convenience alias for:")]),s._v("\nterraform apply -destroy\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Destroys the infrastructure without having to interactively type â€˜yesâ€™ to the plan.")]),s._v("\nterraform destroy -auto-approve\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"providers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#providers"}},[s._v("#")]),s._v(" providers")]),s._v(" "),e("p",[s._v("Prints out a tree of modules in the referenced configuration annotated with their provider requirements.")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("terraform providers\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"get"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[s._v("#")]),s._v(" get")]),s._v(" "),e("p",[s._v("Downloads and installs modules needed for the configuration given by PATH.")]),s._v(" "),e("p",[s._v("Usage: terraform [global options] get [options] PATH")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("terraform get\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Check already-downloaded modules for available updates and install the newest versions available.")]),s._v("\nterraform get -update\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"fmt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fmt"}},[s._v("#")]),s._v(" fmt")]),s._v(" "),e("ul",[e("li",[s._v("Rewrites all Terraform configuration files to a canonical format. Both configuration files ("),e("code",[s._v(".tf")]),s._v(") and variables files ("),e("code",[s._v(".tfvars")]),s._v(") are updated.")]),s._v(" "),e("li",[s._v("JSON files ("),e("code",[s._v(".tf.json")]),s._v(" or "),e("code",[s._v(".tfvars.json")]),s._v(") are not modified.")]),s._v(" "),e("li",[s._v("The content must be in the Terraform language native syntax; JSON is not supported.")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Format your Terraform configuration files using the HCL language standard.")]),s._v("\nterraform "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("fmt")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Also process files in subdirectories. By default, only the given directory (or current directory) is processed.")]),s._v("\nterraform "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("fmt")]),s._v(" --recursive\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Display differences between original configuration files and formatting changes.")]),s._v("\nterraform "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("fmt")]),s._v(" --diff\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  Check if the input is formatted. Exit status will be 0 if all input is properly formatted and non-zero otherwise.")]),s._v("\nterraform "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("fmt")]),s._v(" --check\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("h2",{attrs:{id:"workspace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#workspace"}},[s._v("#")]),s._v(" workspace")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("terraform workspace -help\nUsage: terraform "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("global options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" workspace\n\n  new, list, show, "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" and delete Terraform workspaces.\n\nSubcommands:\n    delete    Delete a workspace\n    list      List Workspaces\n    new       Create a new workspace\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("    Select a workspace\n    show      Show the name of the current workspace\n\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WORKSPACE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("global\nterraform workspace "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${WORKSPACE}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" terraform workspace new "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${WORKSPACE}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h2",{attrs:{id:"force-unlock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#force-unlock"}},[s._v("#")]),s._v(" force-unlock")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://developer.hashicorp.com/terraform/language/state/locking",target:"_blank",rel:"noopener noreferrer"}},[s._v("State Locking"),e("OutboundLink")],1)])]),s._v(" "),e("p",[s._v("Manually unlock the state for the defined configuration.")]),s._v(" "),e("p",[s._v("Remove the lock with the specified lock ID from your workspace. Useful when a lock has become â€˜stuckâ€™, usually after an incomplete Terraform run.")]),s._v(" "),e("blockquote",[e("p",[s._v("To protect you, the "),e("code",[s._v("force-unlock")]),s._v(" command requires a unique lock ID. Terraform will output this lock ID if unlocking fails. This lock ID acts as a nonce, ensuring that locks and unlocks target the correct lock.")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Usage: terraform [global options] force-unlock LOCK_ID")]),s._v("\nterraform force-unlock "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOCK_ID"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Don't ask for input for unlock confirmation.")]),s._v("\nterraform force-unlock -force "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOCK_ID"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"console"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#console"}},[s._v("#")]),s._v(" console")]),s._v(" "),e("p",[s._v("Starts an interactive console for experimenting with Terraform interpolations.")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'join(",",["foo","bar"])\'')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" terraform console\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo,bar"')]),s._v("\n\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1 + 5'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" terraform console\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aws_instance.my_ec2.public_ip"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" terraform console\n\n$ terraform console -var "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo=bar"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This command provides an interactive command-line console for evaluating and experimenting with expressions.")]),s._v("\nterraform console "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n$ terraform console\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  max"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10,15")]),s._v(",5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);